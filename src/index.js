import { getLocalQuote, getRandomQuote, isSameDay } from "./utils/index.js";
import * as dotenv from "dotenv";

import TelegramBot from "node-telegram-bot-api";
import axios from "axios";

dotenv.config();

const TOKEN = process.env.BOT_TOKEN;
const FBAPI = process.env.FB_API_KEY;
const FBSECRET = process.env.FB_SECRET_KEY;

const requiredEnvVars = ['BOT_TOKEN', 'FB_API_KEY', 'FB_SECRET_KEY'];
const missingVars = requiredEnvVars.filter(varName => !process.env[varName]);

if (missingVars.length > 0) {
  console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:', missingVars.join(', '));
  console.error('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env');
  process.exit(1);
}

console.log('‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã');

async function getModelId() {
  try {
    const response = await axios.get(
      "https://api.fusionbrain.ai/key/api/v1/pipelines",
      {
        headers: {
          "X-Key": `Key ${FBAPI}`,
          "X-Secret": `Secret ${FBSECRET}`,
          "Content-Type": "application/json" // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ç–æ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫
        }
      }
    );

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç
    console.log("–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:", response.status);
    console.log("–î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:", response.data);

    const model = response.data.find((m) => m.name && m.name.includes("Kandinsky"));
    return model ? model.id : null;
  } catch (error) {
    console.error(
      "–ü–æ–ª–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ ID –º–æ–¥–µ–ª–∏:",
      error.response?.status,
      error.response?.data || error.message
    );
    return null;
  }
}

async function generateImageWithFusionBrain(prompt) {
  try {
    const modelId = await getModelId();
    if (!modelId) {
      throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –º–æ–¥–µ–ª–∏");
    }

    const enhancedPrompt = `–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è —Ü–∏—Ç–∞—Ç–∞: "${prompt}".
    –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Å–ø–æ–∫–æ–π–Ω—ã—Ö —Ç–æ–Ω–∞—Ö, —Ü–∏—Ñ—Ä–æ–≤–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ,
    –ø—Å–∏—Ö–æ–ª–æ–≥–∏—è, –∞—Ä—Ç-—Ç–µ—Ä–∞–ø–∏—è, –º–µ—Ç–∞—Ñ–æ—Ä–∏—á–µ—Å–∫–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –≥–ª—É–±–∏–Ω–∞`;

    console.log("–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–º–ø—Ç–∞:", enhancedPrompt);

    const generateResponse = await axios.post(
      "https://api.fusionbrain.ai/key/api/v1/pipeline/run",
      {
        model_id: modelId,
        params: {
          type: "GENERATE",
          width: 1024,
          height: 1024,
          num_images: 1,
          style: "DEFAULT", // –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å: "DEFAULT", "KANDINSKY", "UHD"
          generate_params: {
            query: enhancedPrompt,
          },
        },
      },
      {
        headers: {
          "X-Key": `Key ${FBAPI}`,
          "X-Secret": `Secret ${FBSECRET}`,
          "Content-Type": "application/json",
        },
        timeout: 30000,
      }
    );

    const generationId = generateResponse.data.uuid;
    console.log("–ó–∞–ø—É—â–µ–Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å ID:", generationId);

    // 4. –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    await new Promise((resolve) => setTimeout(resolve, 15000)); // –ñ–¥–µ–º 15 —Å–µ–∫—É–Ω–¥

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∏ –ø–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const statusResponse = await axios.get(
      `https://api.fusionbrain.ai/web/api/v1/text2image/status/${generationId}`,
      {
        headers: {
          "X-Key": `Key ${process.env.FUSIONBRAIN_API_KEY}`,
          "X-Secret": `Secret ${process.env.FUSIONBRAIN_SECRET_KEY}`,
        },
      }
    );

    if (statusResponse.data.status === "DONE") {
      const images = statusResponse.data.images;
      if (images && images.length > 0) {
        console.log("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ");
        return images[0]; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º base64 —Å—Ç—Ä–æ–∫—É
      }
    }

    throw new Error("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∏–ª–∏ –Ω–µ —É–¥–∞–ª–∞—Å—å");
  } catch (error) {
    console.error(
      "–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è FusionBrain:",
      error.response?.data || error.message
    );
    return null;
  }
}

const bot = new TelegramBot(TOKEN, { polling: true });

let userLastRequest = {};

bot.onText(/\/start|\/help/, (msg) => {
  const chatId = msg.chat.id;
  if (!userLastRequest[chatId]) {
    userLastRequest[chatId] = null;
  }
  setMainMenu(chatId);
});

bot.on("message", async (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;

  if (text === "–ü–æ–ª—É—á–∏—Ç—å —Ü–∏—Ç–∞—Ç—É") {
    const now = new Date();
    const lastRequestDate = userLastRequest[chatId];

    if (lastRequestDate && isSameDay(now, lastRequestDate)) {
      bot.sendMessage(
        chatId,
        "–ù–∞ —Å–µ–≥–æ–¥–Ω—è —Ü–∏—Ç–∞—Ç–∞ —É–∂–µ –ø–æ–ª—É—á–µ–Ω–∞. –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –∑–∞–≤—Ç—Ä–∞ –∑–∞ –Ω–æ–≤–æ–π –º—É–¥—Ä–æ—Å—Ç—å—é! üåÖ"
      );
      return;
    }

    userLastRequest[chatId] = now;

    try {
      const waitingMessage = await bot.sendMessage(
        chatId,
        "üîÑ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Ü–∏—Ç–∞—Ç—É –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 15-20 —Å–µ–∫—É–Ω–¥."
      );

      const quote = await getRandomQuote();
      const imageBase64 = await generateImageWithFusionBrain(quote.content);

      await bot.deleteMessage(chatId, waitingMessage.message_id);

      if (imageBase64) {
        const imageBuffer = Buffer.from(imageBase64, "base64");
        await bot.sendPhoto(chatId, imageBuffer, {
          caption: `${quote.text}\n\nüñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é FusionBrain`,
        });
      } else {
        await bot.sendMessage(
          chatId,
          `–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. üòî\n\n${quote.text}`
        );
      }
    } catch (error) {
      console.error("–û–±—â–∞—è –æ—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ:", error);
      await bot.sendMessage(
        chatId,
        "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
      );
    }
  }
});


//Menu

export function setMainMenu(chatId) {
  const menuOptions = {
    reply_markup: {
      keyboard: [[{ text: "–ü–æ–ª—É—á–∏—Ç—å —Ü–∏—Ç–∞—Ç—É" }]],
    },
    resize_keyboard: true,
    one_time_keyboard: false,
  };
  bot.sendMessage(
    chatId,
    "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ü–∏—Ç–∞—Ç—É.",
    menuOptions
  );
}

//Errors

bot.on("error", (error) => {
  console.error("–û—à–∏–±–∫–∞ Telegram Bot API:", error);
});

console.log("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ —Å FusionBrain AI!");

