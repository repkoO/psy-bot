// Utils
import { getLocalQuote, isSameDay } from "./utils/index.js";

// Constants
import { mainMenu, WELCOME_MESSAGE } from "./constants/menu.js";

// Modules
import { getRandomUnsplashImage } from "./modules/unsplash.js";

// Packages

import TelegramBot from "node-telegram-bot-api";
import axios from "axios";
import path from "path";
import fs from "fs";
import { fileURLToPath } from "url";
import dotenv from "dotenv";

dotenv.config();

const TOKEN = process.env.BOT_TOKEN;

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const bot = new TelegramBot(TOKEN, { polling: true });

let userLastRequest = {};

bot.onText(/\/start|\/help/, (msg) => {
  const chatId = msg.chat.id;
  if (!userLastRequest[chatId]) {
    userLastRequest[chatId] = null;
  }
  setMainMenu(chatId);
});

bot.on("message", async (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;

  if (text === "/start" || text === "/help") {
    return;
  }
  switch (text) {
    case "üåÖ –ü–æ–ª—É—á–∏—Ç—å —Ü–∏—Ç–∞—Ç—É":
      getQuoteImage(chatId);
      break;
    case "üìö –ñ–µ–Ω—Å–∫–∏–π –∫–Ω–∏–∂–Ω—ã–π –∫–ª—É–±":
      handleWomensClub(chatId);
      break;
    case "üë§ –û–±–æ –º–Ω–µ":
      handleAboutMe(chatId);
      break;
    case "–ò–≥—Ä–∞ –º–∞—Ç—Ä–µ—à–∫–∞":
      handleAboutGame(chatId);
      break;
    default:
      break;
  }
});

// –¶–∏—Ç–∞—Ç—ã
async function getQuoteImage(chatId) {
  const now = new Date();
  const lastRequestDate = userLastRequest[chatId];

  if (lastRequestDate && isSameDay(now, lastRequestDate)) {
    bot.sendMessage(
      chatId,
      `‚è≥ *–ù–∞ —Å–µ–≥–æ–¥–Ω—è —Ü–∏—Ç–∞—Ç–∞ —É–∂–µ –ø–æ–ª—É—á–µ–Ω–∞*\n\n–ó–∞–≤—Ç—Ä–∞ –≤–∞—Å –∂–¥–µ—Ç –Ω–æ–≤–∞—è –ø–æ—Ä—Ü–∏—è –º—É–¥—Ä–æ—Å—Ç–∏ –∏ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è! üåÖ\n\n*–í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –ø–æ—Å–ª–µ –ø–æ–ª—É–Ω–æ—á–∏* üí´`,
      { parse_mode: "Markdown" }
    );
  } else {
    userLastRequest[chatId] = now;
    const waitingMessage = await bot.sendMessage(
      chatId,
      "üîç *–ò—â–µ–º –¥–ª—è –≤–∞—Å –∏–¥–µ–∞–ª—å–Ω—É—é —Ü–∏—Ç–∞—Ç—É...*\n\n‚è≥ –ü–æ–¥–±–∏—Ä–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...",
      { parse_mode: "Markdown" }
    );
    const quote = await getRandomQuote();
    const image = await getRandomUnsplashImage();
    await bot.editMessageText("‚úÖ *–ì–æ—Ç–æ–≤–æ!* –í–∞—à–∞ —Ü–∏—Ç–∞—Ç–∞ –Ω–∞–π–¥–µ–Ω–∞ üí´", {
      chat_id: chatId,
      message_id: waitingMessage.message_id,
      parse_mode: "Markdown",
    });
    try {
      if (image) {
        const imagePath = await downloadImage(
          image.url,
          `quote_${Date.now()}.jpg`
        );
        if (imagePath) {
          await bot.sendPhoto(chatId, imagePath, {
            caption: `${quote.text}`,
            parse_mode: "HTML",
          });
          fs.unlinkSync(imagePath);
        } else {
          await bot.sendMessage(chatId, quote.text);
        }
      } else {
        await bot.sendMessage(chatId, quote.text);
      }
    } catch {
      if (image) {
        const imagePath = await downloadImage(
          image.url,
          `quote_${Date.now()}.jpg`
        );
        if (imagePath) {
          await bot.sendPhoto(chatId, imagePath, {
            caption: `${quote.text}`,
            parse_mode: "HTML",
          });
          fs.unlinkSync(imagePath);
        } else {
          await bot.sendMessage(chatId, quote.text);
        }
      } else {
        await bot.sendMessage(chatId, quote.text);
      }
    }
    await bot.deleteMessage(chatId, waitingMessage.message_id);
  }
}
// –ñ–µ–Ω—Å–∫–∏–π –∫–ª—É–±
async function handleWomensClub(chatId) {
  const typingMessage = await bot.sendMessage(
    chatId,
    "üë©‚Äçüë©‚Äçüëß‚Äçüëß *–ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª—É–±–µ...*",
    { parse_mode: "Markdown" }
  );
  try {
    const photosDir = path.join(__dirname, "assets", "images", "womens");
    const files = fs.readdirSync(photosDir);
    const imageFiles = files
      .filter((file) => /\.(jpg|jpeg|png|gif)$/i.test(file))
      .slice(0, 5);

    if (imageFiles.length === 0) {
      await bot.sendMessage(chatId, "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.");
      return;
    }

    await bot.deleteMessage(chatId, typingMessage.message_id);

    const mediaGroup = imageFiles.map((file, index) => ({
      type: "photo",
      media: path.join(photosDir, file),
      caption:
        index === 0
          ? `üìö *–ñ–µ–Ω—Å–∫–∏–π –∫–Ω–∏–∂–Ω—ã–π –∫–ª—É–±*\n\n‚ú® *–ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, —Å–æ–∑–¥–∞–≤–∞–µ–º–æ–µ –≤–º–µ—Å—Ç–µ —Å –≤–∞–º–∏* üïäÔ∏è\n\n*–ß—Ç–æ –º—ã –¥–µ–ª–∞–µ–º:*\n‚Ä¢ üó£Ô∏è –†–∞–∑–±–∏—Ä–∞–µ–º –≤–∞–∂–Ω—ã–µ —Ç–µ–º—ã\n‚Ä¢ üíñ –ù–∞—Ö–æ–¥–∏–º –ø–æ–¥–¥–µ—Ä–∂–∫—É\n‚Ä¢ üå± –£—á–∏–º—Å—è –ø–æ–Ω–∏–º–∞—Ç—å —Å–µ–±—è\n‚Ä¢ ‚ú® –í–¥–æ—Ö–Ω–æ–≤–ª—è–µ–º –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ–º—Å—è\n\n*–ë–µ–∑ —Å—Ç–µ—Ä–µ–æ—Ç–∏–ø–æ–≤. –ë–µ–∑ –æ—Å—É–∂–¥–µ–Ω–∏—è. –ß–µ—Å—Ç–Ω–æ –∫ —Å–µ–±–µ.* üí´`
          : undefined,
      parse_mode: "Markdown",
    }));

    await bot.sendMediaGroup(chatId, mediaGroup);

    await bot.sendMessage(
      chatId,
      "üí´ *–•–æ—Ç–∏—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞—à–µ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É?*",
      {
        parse_mode: "Markdown",
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: "üìñ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ –∫–Ω–∏–∂–Ω—ã–π –∫–ª—É–±",
                url: "https://t.me/viktoria_albu",
              },
            ],
          ],
        },
      }
    );
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ –∫–Ω–∏–∂–Ω–æ–≥–æ –∫–ª—É–±–∞:", error);
    await bot.sendMessage(chatId, "–í—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
  }
}

// –û–±–æ –º–Ω–µ
async function handleAboutMe(chatId) {
  const typingMessage = await bot.sendMessage(
    chatId,
    "üë§ *–ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é...*",
    { parse_mode: "Markdown" }
  );
  try {
    const photosDir = path.join(
      __dirname,
      "assets",
      "images",
      "self",
      "IMG_2148.jpg"
    );

    const caption = `üåø *–í–∏–∫—Ç–æ—Ä–∏—è –ê–ª–±—É*

*–ì–µ—à—Ç–∞–ª—å—Ç-—Ç–µ—Ä–∞–ø–µ–≤—Ç | –°–µ–º–µ–π–Ω—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥*


‚ú® *–Ø –ø–æ–º–æ–≥–∞—é –∂–µ–Ω—â–∏–Ω–∞–º –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è –∫ —Å–µ–±–µ* –∏ —Å—Ç—Ä–æ–∏—Ç—å –æ—Ç–Ω–æ—à–µ–Ω–∏—è, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ.

–Ø –Ω–µ –≤–µ—Ä—é –≤ —à–∞–±–ª–æ–Ω—ã –∏ ¬´–∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ¬ª. –Ø –≤–µ—Ä—é –≤ –≤–∞—à—É —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å.


üõ°Ô∏è *–í –º–æ–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ –º–æ–∂–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ:*
‚Ä¢ –£–≤–∏–¥–µ—Ç—å —Å–≤–æ—é –≥–ª—É–±–∏–Ω—É –∏ –ø–µ—Ä–µ—Å—Ç–∞—Ç—å —Å–µ–±—è —É–ø—Ä–µ–∫–∞—Ç—å
‚Ä¢ –†–∞–∑—Ä–µ—à–∏—Ç—å —Å–µ–±–µ –±—ã—Ç—å —Ä–∞–∑–Ω–æ–π ‚Äî —Å–∏–ª—å–Ω–æ–π –∏ –Ω–µ–∂–Ω–æ–π
‚Ä¢ –ù–∞—É—á–∏—Ç—å—Å—è –ª—é–±–∏—Ç—å —Å–µ–±—è –ø—Ä–æ—Å—Ç–æ –ø–æ—Ç–æ–º—É, —á—Ç–æ –≤—ã –µ—Å—Ç—å
‚Ä¢ –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –æ—Ç–Ω–æ—à–µ–Ω–∏—è, –≥–¥–µ –≤–∞—Å —Å–ª—ã—à–∞—Ç –∏ —É–≤–∞–∂–∞—é—Ç


üéØ *–ú–æ—è —Ü–µ–ª—å* ‚Äî –ø–æ–º–æ—á—å –≤–∞–º —É—Å–ª—ã—à–∞—Ç—å —Å–≤–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –≥–æ–ª–æ—Å —Å–∫–≤–æ–∑—å —à—É–º –¥–æ–ª–∂–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–∏–π.


üí´ *–ï—Å–ª–∏ –≤—ã —á—É–≤—Å—Ç–≤—É–µ—Ç–µ, —á—Ç–æ:*
‚Ä¢ –ü–æ—Ç–µ—Ä—è–ª–∏ —Å–≤—è–∑—å —Å —Å–æ–±–æ–π
‚Ä¢ –í –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –≥–∞—Ä–º–æ–Ω–∏–∏
‚Ä¢ –•–æ—Ç–∏—Ç–µ –Ω–∞—É—á–∏—Ç—å—Å—è —Å–ª—ã—à–∞—Ç—å —Å–µ–±—è
*–î–∞–≤–∞–π—Ç–µ –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è!* –í–∞—à –ø—É—Ç—å –∫ —Å–µ–±–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∑–¥–µ—Å—å.`;

    await bot.deleteMessage(chatId, typingMessage.message_id);
    await bot.sendPhoto(chatId, photosDir, {
      caption: caption,
      parse_mode: "Markdown",
      reply_markup: {
        inline_keyboard: [
          [
            {
              text: "üí´ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–∏–µ–º",
              url: "https://t.me/viktoria_albu",
            },
          ],
        ],
      },
    });
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ '–û–±–æ –º–Ω–µ':", error);
    await bot.sendMessage(chatId, "–í—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
  }
}

// –ú–∞—Ç—Ä–µ—à–∫–∞
async function handleAboutGame(chatId) {
  const typingMessage = await bot.sendMessage(
    chatId,
    "üë§ *–ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é...*",
    { parse_mode: "Markdown" }
  );

  const videoPath = path.join(__dirname, "assets", "video", "IMG_3328.mov");
  const videoStream = fs.createReadStream(videoPath);
  await bot.sendVideo(chatId, videoStream, {
    caption: `üéÆ *–ò–≥—Ä–∞ ¬´–ú–∞—Ç—Ä—ë—à–∫–∞¬ª*

‚ú® *–°–æ–±–∏—Ä–∞–µ—Ç —Ü–µ–ª–æ—Å—Ç–Ω—ã–π –æ–±—Ä–∞–∑ –≤–∞—Å* –∏ –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –Ω–µ–æ–∫–æ–Ω—á–µ–Ω–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã—Ç—è–≥–∏–≤–∞—é—Ç –≤–∞—à—É —ç–Ω–µ—Ä–≥–∏—é.`,
    parse_mode: "Markdown",
  });

  await bot.deleteMessage(chatId, typingMessage.message_id);

  await bot.sendMessage(
    chatId,
    `üéØ *–ß—Ç–æ —Ç–∞–∫–æ–µ –∏–≥—Ä–∞ ¬´–ú–∞—Ç—Ä—ë—à–∫–∞¬ª?*

‚ú® *–≠—Ç–æ –≥–ª—É–±–æ–∫–∞—è –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞*, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–≥–∞–µ—Ç:

‚Ä¢ üß© *–°–æ–±—Ä–∞—Ç—å —Ü–µ–ª–æ—Å—Ç–Ω—ã–π –æ–±—Ä–∞–∑* —Å–µ–±—è
‚Ä¢ ‚ö° *–ü–æ–ª—É—á–∏—Ç—å —Ä–∞–∑—Ä—è–¥–∫—É* –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π
‚Ä¢ üí´ *–í–µ—Ä–Ω—É—Ç—å —ç–Ω–µ—Ä–≥–∏—é*, –∫–æ—Ç–æ—Ä—É—é –∑–∞–±–∏—Ä–∞—é—Ç –ø—Ä–æ—à–ª—ã–µ —Ç—Ä–∞–≤–º—ã
‚Ä¢ üå± *–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏* –ø–æ–≤–µ–¥–µ–Ω–∏—è

*–ú–∞—à–∏–Ω–∞ ‚Äî —ç—Ç–æ –±–æ–ª—å—à–µ, —á–µ–º –Ω–∞–±–æ—Ä –¥–µ—Ç–∞–ª–µ–π*
*–ß–µ–ª–æ–≤–µ–∫ ‚Äî –±–æ–ª—å—à–µ, —á–µ–º –Ω–∞–±–æ—Ä –æ—Ä–≥–∞–Ω–æ–≤*
üß∏ *–°–∏–º–≤–æ–ª–∏–∫–∞ –º–∞—Ç—Ä—ë—à–µ–∫:*

‚Ä¢ üéé *–ë–æ–ª—å—à–∞—è –º–∞—Ç—Ä—ë—à–∫–∞* ‚Äî —ç—Ç–æ –Ω–∞—à –≤–∑—Ä–æ—Å–ª—ã–π –∞–≤–∞—Ç–∞—Ä, —Ç–∞ –≤–µ—Ä—Å–∏—è —Å–µ–±—è, –∫–æ—Ç–æ—Ä—É—é –º—ã –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∏—Ä—É

‚Ä¢ ü™Ü *–ú–∞–ª–µ–Ω—å–∫–∏–µ –º–∞—Ç—Ä—ë—à–∫–∏* ‚Äî —É—Ç—Ä–∞—á–µ–Ω–Ω—ã–µ —á–∞—Å—Ç–∏ –Ω–∞—Å:
  - –ó–∞–±—ã—Ç—ã–µ —Ç–∞–ª–∞–Ω—Ç—ã –∏ –º–µ—á—Ç—ã
  - –ü–æ–¥–∞–≤–ª–µ–Ω–Ω—ã–µ —ç–º–æ—Ü–∏–∏ –∏ —á—É–≤—Å—Ç–≤–∞
  - –ß–∞—Å—Ç–∏, –ø–æ—Ç–µ—Ä—è–Ω–Ω—ã–µ –≤ —Ç—Ä–∞–≤–º–∞—Ç–∏—á–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö
  - –¢–æ, —á—Ç–æ –Ω–µ–ª—å–∑—è –±—ã–ª–æ –ø—Ä–æ—è–≤–ª—è—Ç—å –≤ –ø—Ä–æ—à–ª–æ–º

*–¢—Ä–∞–≤–º—ã –º–æ–≥—É—Ç –±—ã—Ç—å –∏–∑:*
üî∏ –î–µ—Ç—Å—Ç–≤–∞ –∏ –ø–æ–¥—Ä–æ—Å—Ç–∫–æ–≤–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
üî∏ –†–∞–∑—Ä—ã–≤–æ–≤ –æ—Ç–Ω–æ—à–µ–Ω–∏–π
üî∏ –õ–∏—á–Ω–æ—Å—Ç–Ω—ã—Ö –∫—Ä–∏–∑–∏—Å–æ–≤
üî∏ –°–ª–æ–∂–Ω—ã—Ö –∂–∏–∑–Ω–µ–Ω–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π

üéØ *–ó–∞–¥–∞—á–∞ –∏–≥—Ä—ã:*

‚ú® *–ü—Ä–∏—Å–≤–æ–∏—Ç—å —Å–µ–±–µ —É—Ç—Ä–∞—á–µ–Ω–Ω—ã–µ —á–∞—Å—Ç–∏* –∏ –≤–µ—Ä–Ω—É—Ç—å —Å–µ–±–µ —Ä–µ—Å—É—Ä—Å –¥–ª—è:

‚Ä¢ üöÄ *–°–≤–µ—Ä—à–µ–Ω–∏–π* –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
‚Ä¢ üíñ *–ì–∞—Ä–º–æ–Ω–∏—á–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π* —Å —Å–æ–±–æ–π
‚Ä¢ üåç *–ì–∞—Ä–º–æ–Ω–∏–∏* —Å –º–∏—Ä–æ–º –∏ –¥—Ä—É–≥–∏–º–∏ –ª—é–¥—å–º–∏
‚Ä¢ üßò *–¶–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏* –∏ —Å–∞–º–æ–ø—Ä–∏–Ω—è—Ç–∏—è

üå± *–†–µ–∑—É–ª—å—Ç–∞—Ç:*
‚Ä¢ –§–æ—Ä–º–∏—Ä—É—é—Ç—Å—è *–Ω–æ–≤—ã–µ –ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏*
‚Ä¢ –†–∞–∑—Ä–µ—à–∞—é—Ç—Å—è *–≥–ª—É–±–∏–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã*
‚Ä¢ –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è *—ç–Ω–µ—Ä–≥–∏—è –∏ —Ä–∞–¥–æ—Å—Ç—å –∂–∏–∑–Ω–∏*
‚Ä¢ –ü–æ—è–≤–ª—è–µ—Ç—Å—è *—è—Å–Ω–æ—Å—Ç—å* –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Å–µ–±—è

*–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –∫ —Å–µ–±–µ?*

‚ú® –ò–≥—Ä–∞ ¬´–ú–∞—Ç—Ä—ë—à–∫–∞¬ª ‚Äî —ç—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è:
‚Ä¢ üß≠ –°–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—è –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
‚Ä¢ üõ°Ô∏è –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –∫ —Å–µ–±–µ –Ω–∞—Å—Ç–æ—è—â–µ–π
‚Ä¢ üåà –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∂–∏–∑–Ω–∏

üéÆ *–•–æ—Ç–∏—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å?`,
    {
      parse_mode: "Markdown",
      reply_markup: {
        inline_keyboard: [
          [{ text: "–ò–≥—Ä–∞—Ç—å", url: "https://t.me/viktoria_albu" }],
        ],
      },
    }
  );
}

//–ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–∏—Ç–∞—Ç

async function getRandomQuote() {
  try {
    const response = await axios.get("https://api.forismatic.com/api/1.0/", {
      params: {
        method: "getQuote",
        lang: "ru",
        format: "json",
      },
    });

    const quoteData = response.data;
    const author = quoteData.quoteAuthor || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–≤—Ç–æ—Ä";
    const fullQuoteText = `${quoteData.quoteText} ‚Äî ¬© ${author}`;

    return {
      text: fullQuoteText,
      content: quoteData.quoteText,
    };
  } catch {
    console.error();
    return getLocalQuote();
  }
}

//Menu

function setMainMenu(chatId) {
  bot.sendMessage(chatId, WELCOME_MESSAGE, mainMenu);
}

// Unsplash

async function downloadImage(imageUrl, filename) {
  try {
    const response = await axios({
      method: "GET",
      url: imageUrl,
      responseType: "stream",
      timeout: 15000,
    });

    const tempDir = path.join(__dirname, "temp");
    if (!fs.existsSync(tempDir)) {
      fs.mkdirSync(tempDir, { recursive: true });
    }

    const filePath = path.join(tempDir, filename);
    const writer = fs.createWriteStream(filePath);
    response.data.pipe(writer);

    return new Promise((resolve, reject) => {
      writer.on("finish", () => resolve(filePath));
      writer.on("error", reject);
    });
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:", error.message);
    return null;
  }
}

process.on("SIGINT", () => {
  const tempDir = path.join(__dirname, "temp");
  if (fs.existsSync(tempDir)) {
    fs.rmSync(tempDir, { recursive: true, force: true });
  }
  process.exit(0);
});

//Errors
bot.on("polling_error", (error) => {
  console.error("Polling error:", error.code, error.message);
});

console.log("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è...");
