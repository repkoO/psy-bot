import { getLocalQuote, isSameDay } from "./utils/index.js";

import TelegramBot from "node-telegram-bot-api";
import axios from "axios";

const TOKEN = "8327969194:AAHoPBBxnHqbNeQvl7vUg5SY2xh5lErnXm0";

const bot = new TelegramBot(TOKEN, { polling: true });

let userLastRequest = {};

bot.onText(/\/start|\/help/, (msg) => {
  const chatId = msg.chat.id;
  if (!userLastRequest[chatId]) {
    userLastRequest[chatId] = null;
  }
  setMainMenu(chatId);
});

bot.on("message", async (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;

  if (text === "–ü–æ–ª—É—á–∏—Ç—å —Ü–∏—Ç–∞—Ç—É") {
    const now = new Date();
    const lastRequestDate = userLastRequest[chatId];

    if (lastRequestDate && isSameDay(now, lastRequestDate)) {
      bot.sendMessage(
        chatId,
        "–ù–∞ —Å–µ–≥–æ–¥–Ω—è —Ü–∏—Ç–∞—Ç–∞ —É–∂–µ –ø–æ–ª—É—á–µ–Ω–∞. –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –∑–∞–≤—Ç—Ä–∞ –∑–∞ –Ω–æ–≤–æ–π –º—É–¥—Ä–æ—Å—Ç—å—é! üåÖ"
      );
    } else {
      userLastRequest[chatId] = now;
      const waitingMessage = await bot.sendMessage(
        chatId,
        "–ò—â–µ–º –¥–ª—è –≤–∞—Å –º—É–¥—Ä—É—é —Ü–∏—Ç–∞—Ç—É... ‚ú®"
      );
      const quote = await getRandomQuote();
      await bot.deleteMessage(chatId, waitingMessage.message_id);
      bot.sendMessage(chatId, quote.text);
      console.log("–¶–∏—Ç–∞—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:", quote.content);
    }
  }
});

//–ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–∏—Ç–∞—Ç

async function getRandomQuote() {
  try {
    const response = await axios.get("https://api.forismatic.com/api/1.0/", {
      params: {
        method: "getQuote",
        lang: "ru",
        format: "json",
      },
    });

    const quoteData = response.data;
    const author = quoteData.quoteAuthor || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–≤—Ç–æ—Ä";
    const fullQuoteText = `${quoteData.quoteText} ‚Äî ¬© ${author}`;

    return {
      text: fullQuoteText,
      content: quoteData.quoteText,
    };
  } catch {
    console.error();
    return getLocalQuote();
  }
}

//Menu

export function setMainMenu(chatId) {
  const menuOptions = {
    reply_markup: {
      keyboard: [
        [{ text: "–ü–æ–ª—É—á–∏—Ç—å —Ü–∏—Ç–∞—Ç—É" }],
        [{ text: "–ñ–µ–Ω—Å–∫–∏–π –∫–Ω–∏–∂–Ω—ã–π –∫–ª—É–±" }, { text: "–ò–≥—Ä–∞ –º–∞—Ç—Ä–µ—à–∫–∞" }],
        [{ text: "–û–±–æ –º–Ω–µ " }],
      ],
    },
    resize_keyboard: true,
    one_time_keyboard: false,
  };
  bot.sendMessage(
    chatId,
    "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ü–∏—Ç–∞—Ç—É.",
    menuOptions
  );
}

//Errors
bot.on("polling_error", (error) => {
  console.error("Polling error:", error.code, error.message);
});

console.log("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è...");
